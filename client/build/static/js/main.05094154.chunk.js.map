{"version":3,"sources":["components/Map.js","components/PostViewer.js","components/AutoCompleteText.js","components/FilterDeals.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Map","withScriptjs","withGoogleMap","props","className","address","defaultZoom","defaultCenter","lat","lng","defaultPosition","GET_POSTS","gql","PostViewer","state","expandCard","e","target","parentNode","setState","currentTarget","id","query","variables","location","this","dayOfWeek","onCompleted","data","posts","forEach","post","loading","length","map","from","opacity","marginTop","to","key","onClick","style","description","companyName","paddingRight","googleMapURL","loadingElement","height","containerElement","mapElement","React","Component","AutoCompleteText","onTextChanged","value","suggestions","regex","RegExp","items","sort","filter","v","test","text","handleLocationSelect","handleSelect","item","type","name","onKeyPress","handleChange","renderSuggestions","FilterDeals","predictions","onChange","bind","toLowerCase","indexOf","clearTimeout","timeout","setTimeout","getPredictions","handleDayChange","defaultChecked","Footer","currentDay","Date","getDay","App","undefined","console","log","f","Boolean","window","hostname","match","client","ApolloClient","uri","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05094154.chunk.js","sourcesContent":["import React from 'react';\r\nimport { GoogleMap, withScriptjs, withGoogleMap, Marker } from \"react-google-maps\";\r\n\r\nconst Map = withScriptjs(withGoogleMap((props) =>\r\n    <div className=\"expandedCard\">\r\n        <h4 className=\"address\">{props.address}</h4>\r\n        <GoogleMap\r\n            defaultZoom={15}\r\n            defaultCenter={{ lat: props.lat, lng: props.lng }}\r\n            >\r\n\r\n            <Marker \r\n                defaultPosition={{ lat:props.lat, lng:props.lng }}\r\n            />\r\n        </GoogleMap>        \r\n    </div>\r\n\r\n    \r\n))\r\n\r\nexport default Map;","import React from 'react';\r\nimport gql from 'graphql-tag';\r\nimport { Query } from 'react-apollo';\r\nimport '../stylesheet.scss';\r\nimport { Spring } from \"react-spring/renderprops\";\r\n\r\nimport Map from './Map';\r\n\r\nconst GET_POSTS = gql`\r\n\tquery GET_POSTS($location: String, $dayOfWeek: String){\r\n\t\tposts(location: $location dayOfWeek: $dayOfWeek) {\r\n\t\t\tid\r\n\t\t\tcompanyName\r\n\t\t\taddress\r\n\t\t\tlocation\r\n\t\t\tdescription\r\n\t\t\tdayOfWeek\r\n\t\t\tlat\r\n\t\t\tlng\r\n\t\t}\r\n\t}\r\n`;\r\n\r\nclass PostViewer extends React.Component {\r\n\tstate = {\r\n\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst expandCard = (e) => {\r\n\t\t\t// only expand card if click is NOT within Google map\r\n\t\t\tif(e.target.parentNode.parentNode.parentNode.parentNode.className !== 'googleMap') {\r\n\t\t\t\tthis.setState({[e.currentTarget.id]: !this.state[e.currentTarget.id]});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Query\r\n\t\t\t\tquery={GET_POSTS}\r\n\t\t\t\tvariables={{ location: this.props.location, dayOfWeek: this.props.dayOfWeek}}\r\n\t\t\t\tonCompleted={data => data.posts.forEach(post => this.setState({[post.id]: false}))}>\r\n\t\t\t\t{({ loading, data }) => !loading && (\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{data.posts.length > 0 ? (<h4 id=\"tagline\">{this.props.location.length > 0 ? data.posts.length + ' d' : 'D'}eal{data.posts.length > 1 && 's'} {this.props.location.length > 0 && 'in '}<span className=\"location\">{this.props.location}</span> for {this.props.dayOfWeek}</h4>) : (<h4 id=\"tagline\">No results for '{this.props.location}'. Try again?</h4>)}\r\n\t\t\t\t\t\t<div id=\"card-wrapper\">\r\n\t\t\t\t\t\t\t{data.posts.map(post => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<Spring\r\n\t\t\t\t\t\t\t\t\t\tfrom={{opacity: 0, marginTop: -15}}\r\n\t\t\t\t\t\t\t\t\t\tto={{opacity:1, marginTop: 0}}\r\n\t\t\t\t\t\t\t\t\t\tkey={post.id}>\r\n\r\n\t\t\t\t\t\t\t\t\t\t{props => (\r\n\t\t\t\t\t\t\t\t\t\t\t<div onClick={expandCard} className=\"card\" style={props} key={post.id} id={post.id}>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"defaultCard\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"info\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h2 className=\"description\">{post.description}</h2>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h3 className=\"companyName\">{post.companyName}</h3>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<h4 className=\"location\"><i className=\"fas fa-map-marker-alt\" style={{paddingRight: '.5rem'}}></i>{post.location}</h4>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"directions\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-directions\"></i>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t\t\t{this.state[post.id] ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Map\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tgoogleMapURL=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAeR4JJANXM7oOYOzhXYlrcQeJ5y0FKRw4&v=3.exp&libraries=geometry,drawing,places\"\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tloadingElement={<div className='googleMap' style={{ height: `100%` }} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tcontainerElement={<div className='googleMap' />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tmapElement={<div className='googleMap' style={{ height: `100%` }} />}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlat={post.lat}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tlng={post.lng}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\taddress={post.address}\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t/> : \r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"more\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<i className=\"fas fa-angle-double-down\"></i><em><h6>more</h6></em>\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t</Spring>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Query>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default PostViewer;","import React from 'react';\r\n\r\nexport default class AutoCompleteText extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n        this.items = [\r\n                        'North End', \r\n                        'Cambridge', \r\n                        'South End', \r\n                        'Back Bay',\r\n                        \"Copley Square\",\r\n                        \"Harvard Square\",\r\n                        \"Financial District\",\r\n                        \"Fenway/Kenmore\",\r\n                        \"Somerville\",\r\n                        \"Brighton\",\r\n                        \"Davis Square\",\r\n                        \"Allston\",\r\n                        \"Beacon Hill\",\r\n                        \"Chinatown\",\r\n                        \"Bay Village\",\r\n                        \"Downtown\",\r\n                        \"West End\",\r\n                        \"Roxbury\",\r\n                        \"Dorchester\",\r\n                        \"Roslindale\",\r\n                        \"Mattapan\",\r\n                        \"Hyde Park\",\r\n                        \"West Roxbury\",\r\n                        \"Jamaica Plain\",\r\n                        \"Mission Hill\",\r\n                        \"South Boston\",\r\n                        \"Charlestown\",\r\n                        \"East Boston\",\r\n                        \"Mid Dorchester\",\r\n\r\n                    ];\r\n        this.state = {\r\n            suggestions: [''],\r\n            text: \"\"\r\n        };\r\n    }\r\n    \r\n    onTextChanged = (e) => {\r\n        const value = e.target.value;\r\n        let suggestions = [];\r\n        if (value.length > 0) {\r\n            const regex = new RegExp(`^${value}`, 'i');\r\n            suggestions = this.items.sort().filter(v => regex.test(v))\r\n        }\r\n        this.props.onTextChanged(suggestions, value);\r\n        this.setState(() => ({ suggestions, text: value }));\r\n         \r\n    }\r\n\r\n\r\n    renderSuggestions () {\r\n        const { suggestions } = this.props;\r\n\r\n        if (suggestions.length === 0) {\r\n            return null;\r\n        }\r\n        return (\r\n            <ul>\r\n                {suggestions.map((item) => <li onClick={() => this.handleLocationSelect(item)} key={this.props.posts.id}><i className=\"fas fa-search\"></i>{item}</li>)}\r\n            </ul>\r\n        );\r\n    }\r\n\r\n    handleLocationSelect = (value) => {\r\n        this.setState(() => ({\r\n            text: value,\r\n            suggestions: []\r\n        }));\r\n        let suggestions = [];\r\n        this.props.onTextChanged(suggestions, value);\r\n        this.props.handleSelect(value);\r\n        \r\n    }\r\n\r\n    render () {\r\n        const value = this.props.value;\r\n        return (\r\n            <div id=\"locationSelector\" >\r\n                <input  type=\"text\" \r\n                        name=\"location\"\r\n                        onKeyPress={this.props.handleChange} \r\n                        type=\"text\"\r\n                        onChange={this.onTextChanged}\r\n                        value={value || ''}\r\n                        placeholder=\"Enter neighborhood...\"\r\n                        />\r\n\r\n                {this.renderSuggestions()}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport AutoCompleteText from './AutoCompleteText';\r\n\r\nconst INPUT_TIMEOUT = 250;\r\n\r\nclass FilterDeals extends Component {\r\n\t\t\r\n\t\tconstructor(props) {\r\n\t\t\t\tsuper(props);\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t\tvalue: '',\r\n\t\t\t\t\t\tpredictions: []\r\n\t\t\t\t};\r\n\t\t\t\tthis.onChange = this.onChange.bind(this);\r\n\t\t}\r\n\r\n\t\tgetPredictions(value) {\r\n\r\n\t\t\t\treturn [\r\n\t\t\t\t\t\t'Fenway/Kenmore',\r\n\t\t\t\t\t\t'Back Bay',\r\n\t\t\t\t\t\t'Brighton',\r\n\t\t\t\t\t\t'North End',\r\n\t\t\t\t\t\t'South End',\r\n\t\t\t\t\t\t'Cambridge',\r\n\t\t\t\t\t\t'Somerville',\r\n\t\t\t\t\t\t'Financial District',\r\n\t\t\t\t\t\t'Harvard Square',\r\n\t\t\t\t\t\t'Copley Square'\r\n\t\t\t\t].filter(item => item.toLowerCase().indexOf(value.toLowerCase()) !== -1);\r\n\t\t}\r\n\r\n\t\tonChange(e) {\r\n\t\t\t\t// clear timeout when input changes value\r\n\t\t\t\tclearTimeout(this.timeout);\r\n\t\t\t\tconst value = e.target.value;\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tvalue: value\r\n\t\t\t\t});\r\n\t\t\t\t// console.log(this.state.value);\r\n\t\t\t\t// console.log(this.state.predictions);\r\n\r\n\t\t\t\tif (value.length > 0) {\r\n\t\t\t\t\t// make delayed api call\r\n\t\t\t\t\tthis.timeout = setTimeout(() => {\r\n\t\t\t\t\t\tconst predictions = this.getPredictions(value);\r\n\t\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\t\tpredictions\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t}, INPUT_TIMEOUT);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.setState({\r\n\t\t\t\t\t\tpredictions: []\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t}\r\n\r\n\t\trender() {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t\t<div id=\"filterDeals\">\r\n\r\n\t\t\t\t\t\t\t\t<AutoCompleteText \r\n\t\t\t\t\t\t\t\t\t\thandleSelect={this.props.handleSelect} \r\n\t\t\t\t\t\t\t\t\t\thandleChange={this.props.handleChange}\r\n\t\t\t\t\t\t\t\t\t\tsuggestions={this.props.suggestions}\r\n\t\t\t\t\t\t\t\t\t\tonTextChanged={this.props.onTextChanged}\r\n\t\t\t\t\t\t\t\t\t\tvalue={this.props.value}\r\n\t\t\t\t\t\t\t\t\t\tposts={this.props.posts}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t\t\t<div id=\"dayOfWeekSelector\">\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Sunday\" defaultChecked={this.props.dayOfWeek === 'Sunday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Sun</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Monday\" defaultChecked={this.props.dayOfWeek === 'Monday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Mon</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Tuesday\" defaultChecked={this.props.dayOfWeek === 'Tuesday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Tues</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Wednesday\" defaultChecked={this.props.dayOfWeek === 'Wednesday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Wed</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Thursday\" defaultChecked={this.props.dayOfWeek === 'Thursday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Thu</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Friday\" defaultChecked={this.props.dayOfWeek === 'Friday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Fri</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t\t\t\t<label>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<input onClick={this.props.handleDayChange} type=\"radio\" name=\"dayOfWeek\" value=\"Saturday\" defaultChecked={this.props.dayOfWeek === 'Saturday'}/>\r\n\t\t\t\t\t\t\t\t\t\t\t\t<span>Sat</span>\r\n\t\t\t\t\t\t\t\t\t\t\t</label>  \r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t// </div>\r\n\t\t\t\t)\r\n\t\t}\r\n}\r\n\r\nexport default FilterDeals;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer>\r\n            <div className=\"footer\">\r\n                <h5>BOSTONS DEALS</h5>\r\n            </div>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React, { Component } from 'react';\r\n\r\nimport PostViewer from './components/PostViewer';\r\nimport FilterDeals from './components/FilterDeals';\r\nimport Footer from './components/Footer'\r\n\r\nconst d = new Date();\r\nconst weekdays = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"]\r\nconst currentDay = weekdays[d.getDay()]\r\n\r\nclass App extends Component {\r\n\r\n  state = {\r\n    location: \"\",\r\n    dayOfWeek: currentDay,\r\n    posts: [],\r\n    suggestions: [],\r\n    value: \"\",\r\n  };\r\n\r\n  posts = []\r\n\r\n  handleChange = (e) => {\r\n    if(e.key === 'Enter') {\r\n\r\n      let value = this.state.suggestions[0];\r\n\r\n      if(value === undefined) {\r\n        value = e.target.value;\r\n      }\r\n\r\n      this.setState({value, location: value});\r\n      this.setState({suggestions: []});\r\n\r\n      if (value === undefined) {\r\n        value = e.target.value;\r\n      }\r\n      \r\n      this.setState({value: this.state.suggestions[0], location: value});\r\n      this.setState({suggestions: []}, console.log(value));\r\n\r\n      \r\n      // Old handler for enter key, revert if new way breaks\r\n      // this.setState({[e.target.name]: e.target.value });\r\n      \r\n    }\r\n  };\r\n\r\n  handleDayChange (f) {\r\n    this.setState({dayOfWeek: f.target.value});\r\n  };\r\n\r\n  handleSelect = (location) => {\r\n    this.setState({location});\r\n  }\r\n\r\n  onTextChanged (suggestions, value, location) {\r\n    this.setState({suggestions, value});\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <main className=\"bg-img\">\r\n          <h1 className=\"header\" id=\"header\">Boston's Deals</h1>\r\n          <FilterDeals \r\n              handleDayChange={this.handleDayChange.bind(this)} \r\n              handleChange={this.handleChange.bind(this)} \r\n              dayOfWeek={this.state.dayOfWeek}\r\n              location={this.state.location}\r\n              posts={this.posts}\r\n              handleSelect={this.handleSelect.bind(this)}\r\n              suggestions={this.state.suggestions}\r\n              onTextChanged={this.onTextChanged.bind(this)}\r\n              value={this.state.value}\r\n              posts={this.state.posts}\r\n              />\r\n\r\n          <PostViewer \r\n            dayOfWeek={this.state.dayOfWeek}\r\n            location={this.state.location}\r\n            posts={this.state.posts}\r\n            />\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport ApolloClient from 'apollo-boost';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst client = new ApolloClient({\r\n    uri: \"http://localhost:4000/graphql\"\r\n});\r\n\r\nReactDOM.render(\r\n    <ApolloProvider client={client}>\r\n        <App />\r\n    </ApolloProvider>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\nif (module.hot) module.hot.accept();"],"sourceRoot":""}